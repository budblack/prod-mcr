webpackJsonp([7],{489:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(126),r=n(50),i=n(490);r.default.emit("event/log/trace",{step:"初始化扩展, module_clipper"});var s=new i.ModelClipper;o.default.modules.instClipper=s,t.default={},t.InstClipper=s},490:function(e,t,n){"use strict";function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var r=function(){function e(e,t){for(var n,o=0;o<t.length;o++)n=t[o],n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}();Object.defineProperty(t,"__esModule",{value:!0});var i=(n(364),n(126));n(491);!function(){function e(){0<arguments.length&&void 0!==arguments[0]&&arguments[0],o(this,e),this._isEditOn=!1}r(e,[{key:"editOn",value:function(){return this._isEditOn=!0,this}},{key:"editOff",value:function(){return this._isEditOn=!1,this}},{key:"createPlan",value:function(){return this}},{key:"Plans",get:function(){return this._plans}},{key:"Meshs",get:function(){return this._meshs}}])}();t.ModelClipper=function e(){if(o(this,e),!i.default.graph.scene)throw"场景为初始化"}},491:function(e,t,n){"use strict";(function(e){e.DragControls=function(t,n,o){function r(){o.addEventListener("mousemove",s,!1),o.addEventListener("mousedown",a,!1),o.addEventListener("mouseup",c,!1),o.addEventListener("mouseleave",c,!1),o.addEventListener("touchmove",l,!1),o.addEventListener("touchstart",u,!1),o.addEventListener("touchend",d,!1)}function i(){o.removeEventListener("mousemove",s,!1),o.removeEventListener("mousedown",a,!1),o.removeEventListener("mouseup",c,!1),o.removeEventListener("mouseleave",c,!1),o.removeEventListener("touchmove",l,!1),o.removeEventListener("touchstart",u,!1),o.removeEventListener("touchend",d,!1)}function s(e){e.preventDefault();var r=o.getBoundingClientRect();if(h.x=(e.clientX-r.left)/r.width*2-1,h.y=-(e.clientY-r.top)/r.height*2+1,f.setFromCamera(h,n),y&&b.enabled)return f.ray.intersectPlane(p,E)&&y.position.copy(E.sub(m)),void b.dispatchEvent({type:"drag",object:y});f.setFromCamera(h,n);var i=f.intersectObjects(t);if(0<i.length){var s=i[0].object;p.setFromNormalAndCoplanarPoint(n.getWorldDirection(p.normal),s.position),g!==s&&(b.dispatchEvent({type:"hoveron",object:s}),o.style.cursor="pointer",g=s)}else null!=g&&(b.dispatchEvent({type:"hoveroff",object:g}),o.style.cursor="auto",g=null)}function a(e){e.preventDefault(),f.setFromCamera(h,n);var r=f.intersectObjects(t);0<r.length&&(y=r[0].object,f.ray.intersectPlane(p,E)&&m.copy(E).sub(y.position),o.style.cursor="move",b.dispatchEvent({type:"dragstart",object:y}))}function c(e){e.preventDefault(),y&&(b.dispatchEvent({type:"dragend",object:y}),y=null),o.style.cursor="auto"}function l(e){e.preventDefault(),e=e.changedTouches[0];var t=o.getBoundingClientRect();if(h.x=(e.clientX-t.left)/t.width*2-1,h.y=-(e.clientY-t.top)/t.height*2+1,f.setFromCamera(h,n),y&&b.enabled)return f.ray.intersectPlane(p,E)&&y.position.copy(E.sub(m)),void b.dispatchEvent({type:"drag",object:y})}function u(e){e.preventDefault(),e=e.changedTouches[0];var r=o.getBoundingClientRect();h.x=(e.clientX-r.left)/r.width*2-1,h.y=-(e.clientY-r.top)/r.height*2+1,f.setFromCamera(h,n);var i=f.intersectObjects(t);0<i.length&&(y=i[0].object,p.setFromNormalAndCoplanarPoint(n.getWorldDirection(p.normal),y.position),f.ray.intersectPlane(p,E)&&m.copy(E).sub(y.position),o.style.cursor="move",b.dispatchEvent({type:"dragstart",object:y}))}function d(e){e.preventDefault(),y&&(b.dispatchEvent({type:"dragend",object:y}),y=null),o.style.cursor="auto"}if(t instanceof e.Camera){console.warn("THREE.DragControls: Constructor now expects ( objects, camera, domElement )");var v=t;t=n,n=v}var p=new e.Plane,f=new e.Raycaster,h=new e.Vector2,m=new e.Vector3,E=new e.Vector3,y=null,g=null,b=this;r(),this.enabled=!0,this.activate=r,this.deactivate=i,this.dispose=function(){i()},this.setObjects=function(){console.error("THREE.DragControls: setObjects() has been removed.")},this.on=function(e,t){console.warn("THREE.DragControls: on() has been deprecated. Use addEventListener() instead."),b.addEventListener(e,t)},this.off=function(e,t){console.warn("THREE.DragControls: off() has been deprecated. Use removeEventListener() instead."),b.removeEventListener(e,t)},this.notify=function(e){console.error("THREE.DragControls: notify() has been deprecated. Use dispatchEvent() instead."),b.dispatchEvent({type:e})}},e.DragControls.prototype=Object.create(e.EventDispatcher.prototype),e.DragControls.prototype.constructor=e.DragControls}).call(t,n(350))}});